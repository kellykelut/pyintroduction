#Variables Practice


#String
# a word that need " " to be printed out
# can save in the variable which can be used again.
# example
greeting = "hello"
print(greeting)
len(greeting) 

#Number
a = 10

# type() is the built in function that will give the type of the variable.
# for example type(greeting) -> str or string

#String
character = "Jon Snow"
print(character)
len(character) // get the length of the word
print("HELL0", "h")

#Number
price = 10
print(price)

#Math Operator

x = 1
y = 2
z = 3
productvalue = ((x*y)**z)/8
print(productvalue)

#built in function
int(10.5) -> 10
round(10.6) -> 11
int("100") + 100 -> 200

#Sum calculation
a = 1.0
b = 2
sum = int(a + b)
print(sum)

#Lists
#list is the variable that hold or store the same data type in the list.
name = ["putri", "ali", "abu"]
print(name[2]) -> "abu" // the indexing starts from 0,1,2, ...

mylist = ["well","good", "to", "know", "you"]
print(mylist)

#List indexing and slicing
#can access the list from the back starting with -1
#for example
print(mylist[-1]) -> "you"

print(mylist[0:2]) // it will print from index 0 until less than 2 -> "well", "good"
print(mylist[0:] // it will print everything
print(mylist[-2:-1] // since Python cannot read from right to left so cannot do this -1:-2

#insert the index of character'h' 

nameq = "John"
print(nameq[2])
print(nameq[-2])

nameq = "John Smith"
print(nameq[2:4])

letter = "abc.......xyz" // get the index of "y"
print(letter[-2])

#there are many funcion we can use to list such as remove(), append(), sort()

name.append("atikah") -> "putri", "ali", "abu", "atikah"
name.remove("putri") -> "ali", "abu", "atikah"

#remove item using index
name.pop(1) -> ali", "atikah"

#print("Python is fun"[-3:][-1])
#We're dealing with two consecutive slicings here. The first one extracts the string 'fun'
#from string 'Python is fun' while the second extracts string 'n' from string 'fun'.

#append to list. add "ali" to the list
mylist = ["jack", abu"]
mylist.append("ali")

#append list to list
list1 = [1,2,3]
list2 = [2]
list2.append(list1[-1])

#Tuple is also like lists but rarely used since its mutable

#dictionary. its  a key pair value key:value
pins = {"Mike" : 1234,"John":2222}
print(pins("Mike")) -> 1234

Mapping two lists to a dictionary:
 keys = ["a", "b", "c"] 
 values = [1, 2, 3] 
 mydict = dict(zip(keys, values)) 
 mydict 
{'a': 1, 'b': 2, 'c': 3}

#User input 
#it will suspend the program and waiting the input from the user

x = str(input('Enter your name:'))
print('Hello, ' + x)

Enter your name: "putri"
Hello, putri

#conditionals if/else

 pins = {"Putri":1234,"JOE":1111,"JACK":2222}

pin = input("please enter your pin number: ")

if pin in pins.values():
  print("YES")
  print("what would you like to do today")
else:
  print("OPPS")
  
Enter your name:"Putri"
Hello, Putri
please enter your pin number: 1234
YES
what would you like to do today


number = input("please enter your number: ")

if number > 100:
  print("Greater")
elif number == 100
  print("Equal")
else:
  print("Smaller")
  
 #Custom function

 def calculate_age(year):
 age = 2019 - year
 return age
 
 number = input("please enter year of your birth: ")
 age = calculate_age(number)
 print("Your age is " + str(age))
 
 def calculate_lengthstr(words):
    return len(words)

word = str(input("please enter a word of your choice: "))
length = calculate_lengthstr(word)
print("The length of word is " + str(length))

def calculate_lengthstr(words):
    return len(words)

word = str(input("please enter a word of your choice: "))
print("The length of word is " + str(calculate_lengthstr(word)))

#Custom Function with multiple parameter
#function with default parameter

def converter(original, conversion)
 return original * conversion

print(converter(10, 0.3048))

def converter(original, conversion = 0.3.048) // the default would not change. so only need to pass one parameter
 return original * conversion
 
print(converter(10))

#opening file with Python
"""
make sure to save the text file in the same folder or directory of the .py file
that will read the text file
"""

"""
def find_in_file(f):
    myfile = open('sample.txt')
    content = myfile.read()
   # print(content)
    content = content.splitlines()
    print(content)
    if f in content:
            return "There is a fruit"
    else:
            return "There is no fruit"

fruit =input("Enter fruit: ")
print(find_in_file(fruit))

"""

myfile = open("fruits.txt")
fruits = myfile.read()
#fruits = fruits.splitlines()
file.close() # its a good practice to close the file
print(fruits)

#for loops

a = [1,2,4]

for i in a:
    sums = i + 10
    print(sums)

b = "hellodope"
for i in b:
    print(i)

#print fruits in the loop
myfile = open("fruits.txt")
fruits = myfile.read()
for i in fruits:
    print(i)

mylist = [1,3,4,5,6]
for i in mylist:
    print(i)

mylist = ["Trickier"]
for item in mylist:
    print(item)

#print number greater than 2 in the list
mylist = [1,3,4,5,6]
for i in mylist:
    if i > 2:
        print(i)
        
#print the length of the string fruits
myfile = open("fruits.txt")
fruits = myfile.read()
fruits = fruits.splitlines()
for i in fruits:
        print(len(i))

#convert temperature
temperature = [10,-20,100]

def cel_to_fahr(celcius):
    fahrenheit = celcius *9/5 + 32
    return fahrenheit

for celcius in temperature:
    convert = cel_to_fahr(celcius)
    print convert
    #alternative print(cel_to_fahr(celcius))




 
 
 
 

  







 



 



  

 









